  let pitch = 0
  if (!sounds.includes(note)) {
    const notInSound = guitarNotes.indexOf(note)
    const prev = guitarNotes[notInSound - 1]
    const prevprev = guitarNotes[notInSound - 2]
    console.log(note, prev, prevprev)
    if (sounds.includes(prev)) {
      pitch++
      note = prev
    } else {
      pitch = pitch + 2
      note = prevprev
    }
  }
  console.log(note, pitch)
  try {
    const url = `/guitar-electric/${note}.wav`

    const player = new Tone.Player({
      url,
      autostart: false,
    })
    const pitchShift = new Tone.PitchShift(pitch).toDestination()
    player.connect(pitchShift)
  
    await player.load(url)
  
    player.start()
  } catch(error) {
    console.log(error)
  }

  











    // const player = preloadCache.find(e => e.note == note).player.toDestination()
  // player.start()

  let pitch = 0
  if (!sounds.includes(note)) {
    console.log(note)
    const notInSound = guitarNotes.indexOf(note)
    const prev = guitarNotes[notInSound - 1]
    const prevprev = guitarNotes[notInSound - 2]
    if (sounds.includes(prev)) {
      pitch++
      note = prev
    } else {
      pitch = pitch + 2
      note = prevprev
    }
  }
  console.log(pitch, note)
    const url = `/guitar-electric/${note}.wav`

    const player = preloadCache.find(e => e.note == note).player
    player.connect(pitch == 1 ? pitchShiftOne : pitchShiftTwo).toDestination()
  
    await player.load(url)
  
    player.start()